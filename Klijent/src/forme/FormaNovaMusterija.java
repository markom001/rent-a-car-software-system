/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import domen.KategorijaVozaca;
import domen.Musterija;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logika.KlijentKontroler;

/**
 *
 * @author mitro
 */
public class FormaNovaMusterija extends javax.swing.JDialog {

    /**
     * Creates new form FormaNovaMusterija
     */
    public FormaNovaMusterija(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Nova mušterija");
        setLocationRelativeTo(parent);
        popuniComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtImePrezime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDatumRodjenja = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAdresa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbKategorija = new javax.swing.JComboBox();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ime i prezime:");

        jLabel2.setText("Datum rodjenja:");

        jLabel3.setText("Adresa:");

        jLabel4.setText("Kategorija:");

        cmbKategorija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSacuvaj)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDatumRodjenja)
                            .addComponent(txtImePrezime)
                            .addComponent(txtAdresa)
                            .addComponent(cmbKategorija, 0, 255, Short.MAX_VALUE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        
        String imePrezime = txtImePrezime.getText();
        String datum = txtDatumRodjenja.getText();
        String adresa = txtAdresa.getText();
        KategorijaVozaca kv = (KategorijaVozaca) cmbKategorija.getSelectedItem();
        
        if (imePrezime.isEmpty() || datum.isEmpty() || adresa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja su obavezna!");
            return;
        }
        
        if (!imePrezime.contains(" ")) {
            JOptionPane.showMessageDialog(this, "Moraju se uneti i ime i prezime!");
            return;        
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date datumRodjenja;
        
        try {
            datumRodjenja = sdf.parse(datum);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Format datuma nije ispravan!");
            return;
        }
        
         if (datumRodjenja.after(new Date())) {
            JOptionPane.showMessageDialog(this, "Datum rođenja ne može biti posle današnjeg datuma");
            return;
        }
        
        if (!adresa.contains(" ")) {
            JOptionPane.showMessageDialog(this, "Moraju se uneti i naziv ulice i kucni broj");
            return;        
        }
         
        boolean postojiBroj = false;
        
        for(int i = 0; i < adresa.length(); i++){
            if(Character.isDigit(adresa.charAt(i))){
                postojiBroj = true;
            }                      
        }
        
        if(!postojiBroj){
            JOptionPane.showMessageDialog(this, "Potrebno je uneti kucni broj");
            return;
        }
        
        if(!Character.isDigit(adresa.charAt(adresa.length() - 1))){
            JOptionPane.showMessageDialog(this, "Adresa se mora zavrsavati kucnim brojem");
            return;
        }
        
        Musterija musterija = new Musterija(-1, imePrezime, datumRodjenja, adresa, kv);
        
        try {
            KlijentKontroler.getInstance().zapamtiMusteriju(musterija);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio mušteriju");
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti mušteriju");        
        }        
    }//GEN-LAST:event_btnSacuvajActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKategorija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtDatumRodjenja;
    private javax.swing.JTextField txtImePrezime;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBox() {
       
        try {
            cmbKategorija.removeAllItems();
            
            ArrayList<KategorijaVozaca> listaKategorija = KlijentKontroler.getInstance().ucitajListuKategorijaVozaca(); 
            
            for(KategorijaVozaca kv : listaKategorija){
                cmbKategorija.addItem(kv);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(FormaNovaMusterija.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
}
