/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import domen.Musterija;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logika.KlijentKontroler;
import modeli.ModelTabeleMusterija;

/**
 *
 * @author mitro
 */
public class FormaPretragaMusterija extends javax.swing.JDialog {

    /**
     * Creates new form FormaPretragaMusterija
     */
    public FormaPretragaMusterija(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Pretraga mušterija");
        setLocationRelativeTo(parent);
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMusterija = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        btnResetuj = new javax.swing.JButton();
        btnIzmeniMusteriju = new javax.swing.JButton();
        btnZakupiAutomobil = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabelaMusterija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaMusterija);

        jLabel1.setText("Ime i prezime:");

        btnPretrazi.setText("Pretraži");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnResetuj.setText("Resetuj");
        btnResetuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetujActionPerformed(evt);
            }
        });

        btnIzmeniMusteriju.setText("Izmeni mušteriju");
        btnIzmeniMusteriju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniMusterijuActionPerformed(evt);
            }
        });

        btnZakupiAutomobil.setText("Zakupi automobil");
        btnZakupiAutomobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZakupiAutomobilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(459, Short.MAX_VALUE)
                        .addComponent(btnPretrazi)
                        .addGap(18, 18, 18)
                        .addComponent(btnResetuj))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPretraga))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnIzmeniMusteriju)
                                .addGap(18, 18, 18)
                                .addComponent(btnZakupiAutomobil)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPretrazi)
                    .addComponent(btnResetuj))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeniMusteriju)
                    .addComponent(btnZakupiAutomobil))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetujActionPerformed
        
        try {
            txtPretraga.setText("");
            tabelaMusterija.setModel(new ModelTabeleMusterija());
        } catch (Exception ex) {
            Logger.getLogger(FormaPretragaMusterija.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_btnResetujActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        
        if (txtPretraga.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite parametar!");
            return;
        }    
        
        try {
            Musterija m = new Musterija(-1, txtPretraga.getText(), new Date(), "", null);
            ArrayList<Musterija> listaPronadjenih = KlijentKontroler.getInstance().pronadjiMusterije(m);
            tabelaMusterija.setModel(new ModelTabeleMusterija(listaPronadjenih));
            
            if(listaPronadjenih.isEmpty()){                
                JOptionPane.showMessageDialog(this, "Sistem ne može da nađe mušterije po zadatoj vrednosti"); 
                txtPretraga.setText("");
                tabelaMusterija.setModel(new ModelTabeleMusterija());               
            }else{               
                JOptionPane.showMessageDialog(this, "Sistem je našao mušterije po zadatoj vrednosti");
                tabelaMusterija.setModel(new ModelTabeleMusterija(listaPronadjenih));
            }           
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da nađe mušterije po zadatoj vrednosti");
        }
        
        txtPretraga.setText("");      
        
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnIzmeniMusterijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniMusterijuActionPerformed
       
       int red = tabelaMusterija.getSelectedRow();
       if(red == -1){
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita mušteriju! Izaberite red!");
       }else{           
           ModelTabeleMusterija mtm = (ModelTabeleMusterija) tabelaMusterija.getModel();
           Musterija izabrani = mtm.getMusterija(red);          
           try {
               Musterija m = new Musterija(izabrani.getMusterijaID(), "", new Date(), "", null);
               Musterija parametar = KlijentKontroler.getInstance().ucitajMusteriju(m);
               JOptionPane.showMessageDialog(this, "Sistem je učitao mušteriju!");
               new FormaIzmenaMusterije(this, true, parametar).setVisible(true);
           } catch (Exception ex) {
               JOptionPane.showMessageDialog(this, "Sistem ne može da učita mušteriju!");
           }           
       }     
    }//GEN-LAST:event_btnIzmeniMusterijuActionPerformed

    private void btnZakupiAutomobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZakupiAutomobilActionPerformed
        
        int red = tabelaMusterija.getSelectedRow();
        
        if(red == -1){           
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita mušteriju! Izaberite red!");
        }else{
            
            ModelTabeleMusterija mtm = (ModelTabeleMusterija) tabelaMusterija.getModel();
            Musterija izabrani = mtm.getMusterija(red);
            try {
               Musterija m = new Musterija(izabrani.getMusterijaID(), "", new Date(), "", null);
               Musterija parametar = KlijentKontroler.getInstance().ucitajMusteriju(m);
               JOptionPane.showMessageDialog(this, "Sistem je učitao mušteriju!");
               new FormaZakupAutomobila(this, true, parametar).setVisible(true);
           } catch (Exception ex) {
               JOptionPane.showMessageDialog(this, "Sistem ne može da učita mušteriju!");
           }          
        }     
    }//GEN-LAST:event_btnZakupiAutomobilActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniMusteriju;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnResetuj;
    private javax.swing.JButton btnZakupiAutomobil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaMusterija;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
        
        try {
            tabelaMusterija.setModel(new ModelTabeleMusterija());
        } catch (Exception ex) {
            Logger.getLogger(FormaPretragaMusterija.class.getName()).log(Level.SEVERE, null, ex);
        }          
    }

    void osveziTabelu() throws Exception {
        tabelaMusterija.setModel(new ModelTabeleMusterija());
    }
}
