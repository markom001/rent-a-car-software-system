/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import domen.Automobil;
import domen.AutomobilSaTerminom;
import domen.Musterija;
import domen.Prodavac;
import domen.SlobodanTermin;
import domen.ZakupAutomobila;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import logika.KlijentKontroler;
import modeli.ModelTabeleAutomobila;
import sesija.Sesija;

/**
 *
 * @author mitro
 */
public class FormaZakupAutomobila extends javax.swing.JDialog {

    Musterija musterija;
    
    /**
     * Creates new form FormaZakupAutomobila
     */
    public FormaZakupAutomobila(JDialog parent, boolean modal, Musterija parametar) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setTitle("Zakup automobila");
        musterija = parametar;
        srediFormu();
        popuniKombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblMusterija = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbSlobodniTermini = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        lblDatumZakupa = new javax.swing.JLabel();
        panelAutomobili = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmbAutomobili = new javax.swing.JComboBox();
        btnDodajAutomobil = new javax.swing.JButton();
        btnUkloniAutomobil = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAutomobila = new javax.swing.JTable();
        btnSacuvajZakupe = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Mušterija:");

        jLabel2.setText("Slobodan termin:");

        cmbSlobodniTermini.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Datum zakupa:");

        panelAutomobili.setBorder(javax.swing.BorderFactory.createTitledBorder("Automobili"));

        jLabel4.setText("Automobil:");

        cmbAutomobili.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDodajAutomobil.setText("Dodaj automobil");
        btnDodajAutomobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajAutomobilActionPerformed(evt);
            }
        });

        btnUkloniAutomobil.setText("Ukloni automobil");
        btnUkloniAutomobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniAutomobilActionPerformed(evt);
            }
        });

        tabelaAutomobila.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaAutomobila);

        javax.swing.GroupLayout panelAutomobiliLayout = new javax.swing.GroupLayout(panelAutomobili);
        panelAutomobili.setLayout(panelAutomobiliLayout);
        panelAutomobiliLayout.setHorizontalGroup(
            panelAutomobiliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAutomobiliLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelAutomobiliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAutomobiliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(panelAutomobiliLayout.createSequentialGroup()
                            .addComponent(btnDodajAutomobil)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUkloniAutomobil))
                        .addGroup(panelAutomobiliLayout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmbAutomobili, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panelAutomobiliLayout.setVerticalGroup(
            panelAutomobiliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAutomobiliLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(panelAutomobiliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbAutomobili, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAutomobiliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajAutomobil)
                    .addComponent(btnUkloniAutomobil))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btnSacuvajZakupe.setText("Sačuvaj zakupe");
        btnSacuvajZakupe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajZakupeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSacuvajZakupe)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDatumZakupa, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMusterija, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSlobodniTermini, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelAutomobili, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMusterija, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbSlobodniTermini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblDatumZakupa, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelAutomobili, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvajZakupe)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajAutomobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajAutomobilActionPerformed
       
        ModelTabeleAutomobila mta = (ModelTabeleAutomobila) tabelaAutomobila.getModel();
        Automobil auto = (Automobil) cmbAutomobili.getSelectedItem();
        
        if(!mta.postoji(auto)){
            mta.dodajAutomobil(auto);
            btnSacuvajZakupe.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, "Automobil je već dodat na listu!");
        }     
    }//GEN-LAST:event_btnDodajAutomobilActionPerformed

    private void btnUkloniAutomobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniAutomobilActionPerformed
        
        ModelTabeleAutomobila mta = (ModelTabeleAutomobila) tabelaAutomobila.getModel();
        int red = tabelaAutomobila.getSelectedRow();
        ArrayList<Automobil> listaAutomobila = mta.getListaAutomobila();
        
         if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate izabrati automobil!");
        } else {
            mta.izbrisi(red);           
            if (listaAutomobila.isEmpty()) {
                btnSacuvajZakupe.setEnabled(false);
            }
        }        
    }//GEN-LAST:event_btnUkloniAutomobilActionPerformed

    private void btnSacuvajZakupeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajZakupeActionPerformed
        
        // 0 - nedostupan, 1 - dostupan
        
        ModelTabeleAutomobila mta = (ModelTabeleAutomobila) tabelaAutomobila.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        ArrayList<Automobil> listaAutomobila = mta.getListaAutomobila();
        SlobodanTermin slobodanTermin =  (SlobodanTermin) cmbSlobodniTermini.getSelectedItem();
        Prodavac prodavac = Sesija.getInstance().getProdavac();
        
        String sacuvaj = provera(slobodanTermin, listaAutomobila);
        
        if(!sacuvaj.isEmpty()){
            JOptionPane.showMessageDialog(this, sacuvaj);
            return;
        }
        
        ArrayList<AutomobilSaTerminom> listaAutoTermina = new ArrayList<>();
        
        for(Automobil auto: listaAutomobila){           
            try {               
                AutomobilSaTerminom autoTermin = new AutomobilSaTerminom(-1, 0, slobodanTermin, auto);
                KlijentKontroler.getInstance().zapamtiAutoTermin(autoTermin);
                ArrayList<AutomobilSaTerminom> listaSvihAutoTermina = KlijentKontroler.getInstance().vratiAutoTermine();
                for(AutomobilSaTerminom at : listaSvihAutoTermina){
                    if(at.getAutomobil().getAutomobilID() == autoTermin.getAutomobil().getAutomobilID() 
                            && at.getSlobodanTermin().getSlobodanTerminID() == autoTermin.getSlobodanTermin().getSlobodanTerminID()){
                        listaAutoTermina.add(at);
                    }
                }
                
            }   catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti zakup!");
            }      
        }
                   
        try {   
            
            for(AutomobilSaTerminom at : listaAutoTermina){
                Date datumZakupa = sdf.parse(lblDatumZakupa.getText());
                ZakupAutomobila zakup = new ZakupAutomobila(-1, datumZakupa, prodavac, musterija, at);
                KlijentKontroler.getInstance().zapamtiZakup(zakup);
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio zakup za: Automobil - " + at.getAutomobil().getMarkaAutomobila() + " | Termin - " + at.getSlobodanTermin().getNazivMeseca());               
            }
            
        }   catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti zakup!");
        }           
    }//GEN-LAST:event_btnSacuvajZakupeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajAutomobil;
    private javax.swing.JButton btnSacuvajZakupe;
    private javax.swing.JButton btnUkloniAutomobil;
    private javax.swing.JComboBox cmbAutomobili;
    private javax.swing.JComboBox cmbSlobodniTermini;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatumZakupa;
    private javax.swing.JLabel lblMusterija;
    private javax.swing.JPanel panelAutomobili;
    private javax.swing.JTable tabelaAutomobila;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        
        lblMusterija.setText(musterija.getImePrezime());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        lblDatumZakupa.setText(sdf.format(new Date()));
        tabelaAutomobila.setModel(new ModelTabeleAutomobila());
        btnSacuvajZakupe.setEnabled(false);       
    }

    private void popuniKombo() {
        
        try {
            cmbSlobodniTermini.removeAllItems();
            ArrayList<SlobodanTermin> listaTermina = KlijentKontroler.getInstance().ucitajListuSlobodnihTermina();
            for(SlobodanTermin st : listaTermina){
                cmbSlobodniTermini.addItem(st);
            }
            
            cmbAutomobili.removeAllItems();
            ArrayList<Automobil> listaAutomobila = KlijentKontroler.getInstance().ucitajListuAutomobila();
            for(Automobil auto : listaAutomobila){
                cmbAutomobili.addItem(auto);
            }
                      
        } catch (Exception ex) {
            Logger.getLogger(FormaZakupAutomobila.class.getName()).log(Level.SEVERE, null, ex);
        }     
    }

    private String provera(SlobodanTermin slobodanTermin, ArrayList<Automobil> listaAutomobila) {
       
        ArrayList<String> listaPoruka = new ArrayList<>();
        
        boolean sacuvaj = true;        
        try {
            
            ArrayList<AutomobilSaTerminom> listaAutoTermina = KlijentKontroler.getInstance().vratiAutoTermine();
            for (AutomobilSaTerminom at : listaAutoTermina) {               
                for(Automobil auto : listaAutomobila){                   
                    if(at.getAutomobil().getAutomobilID() == auto.getAutomobilID() && at.getSlobodanTermin().getSlobodanTerminID() == slobodanTermin.getSlobodanTerminID()){
                        listaPoruka.add(new String("ZAUZET - Termin: " + slobodanTermin.getNazivMeseca() +  " | Automobil: " + auto.getMarkaAutomobila()));
                    }               
                }              
            }
                        
        } catch (Exception ex) {
            Logger.getLogger(FormaZakupAutomobila.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String nalepi = "";
        for(String poruka : listaPoruka){
            nalepi += poruka + "\n";
        }
      
        return nalepi;
    }
    
}
