/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import domen.AutomobilSaTerminom;
import domen.Musterija;
import domen.RacunZakupaAutomobila;
import domen.ZakupAutomobila;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logika.KlijentKontroler;
import modeli.ModelTabeleZakupa;
import sesija.Sesija;

/**
 *
 * @author mitro
 */
public class FormaPretragaZakupa extends javax.swing.JDialog {

    /**
     * Creates new form PretragaZakupa
     */
    public FormaPretragaZakupa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Pretraga zakupa");
        setLocationRelativeTo(null);
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaZakupa = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        btnResetuj = new javax.swing.JButton();
        btnObrisiZakup = new javax.swing.JButton();
        btnIzdajRacun = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabelaZakupa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaZakupa);

        jLabel1.setText("Ime i prezime mušterije:");

        btnPretrazi.setText("Pretraži");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnResetuj.setText("Resetuj");
        btnResetuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetujActionPerformed(evt);
            }
        });

        btnObrisiZakup.setText("Obriši zakup");
        btnObrisiZakup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiZakupActionPerformed(evt);
            }
        });

        btnIzdajRacun.setText("Izdaj račun");
        btnIzdajRacun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzdajRacunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(443, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnPretrazi)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetuj)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnObrisiZakup)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnIzdajRacun))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtPretraga)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPretrazi)
                    .addComponent(btnResetuj, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisiZakup)
                    .addComponent(btnIzdajRacun))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetujActionPerformed
        osveziTabelu();
    }//GEN-LAST:event_btnResetujActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
                
        if (txtPretraga.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite parametar za pretragu!");
            return;
        }        
        
        try{
            AutomobilSaTerminom autoTermin = new AutomobilSaTerminom(-1, 0, null, null);
            Musterija m = new Musterija(-1, txtPretraga.getText(), new Date(), "", null);
            ZakupAutomobila zakup = new ZakupAutomobila(-1, new Date(), Sesija.getInstance().getProdavac(), m, autoTermin);
            ArrayList<ZakupAutomobila> listaPronadjenih = KlijentKontroler.getInstance().pronadjiZakupe(zakup);
            tabelaZakupa.setModel(new ModelTabeleZakupa(listaPronadjenih));
            if (listaPronadjenih.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da pronađe zakupe po zadatoj vrednosti");
                txtPretraga.setText(null);
                osveziTabelu();
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je našao zakupe po zadatoj vrednosti");
                tabelaZakupa.setModel(new ModelTabeleZakupa(listaPronadjenih));
            }   
                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Sistem ne može da pronađe zakupe po zadatoj vrednosti");
            osveziTabelu();
        }
        
        txtPretraga.setText("");
        
        
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnObrisiZakupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiZakupActionPerformed
       
        int red = tabelaZakupa.getSelectedRow();
        
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita zakup! Izaberite red!");
        } else {            
            try {
            ModelTabeleZakupa mtz = (ModelTabeleZakupa) tabelaZakupa.getModel();
            ZakupAutomobila zakup = mtz.getZakup(red);
            
            ZakupAutomobila z = new ZakupAutomobila(zakup.getZakupID(), new Date(), null, null, null);
            ZakupAutomobila parametar = KlijentKontroler.getInstance().ucitajZakup(z);
            JOptionPane.showMessageDialog(this, "Sistem je učitao zakup");
            
            Object[] opcije = { "Da", "Ne" };
            int izbor = JOptionPane.showOptionDialog(null, "Da li želite da obrišete zakup?", "Brisanje zakupa", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, opcije, opcije[0]);
            
            if(izbor == 0){
                            
                try {
                    KlijentKontroler.getInstance().obrisiZakup(parametar);
                    JOptionPane.showMessageDialog(this, "Sistem je obrisao zakup");
                    osveziTabelu();                 
                } catch(Exception e) {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da obriše zakup");
                }
            }
            
            } catch(Exception e) {             
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita zakup!");   
            }           
        }                  
    }//GEN-LAST:event_btnObrisiZakupActionPerformed

    private void btnIzdajRacunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzdajRacunActionPerformed
              
        int red = tabelaZakupa.getSelectedRow();
        
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita zakup! Izaberite red!");
        } else {
            try {
                ModelTabeleZakupa mtz = (ModelTabeleZakupa) tabelaZakupa.getModel();
                ZakupAutomobila zakup = mtz.getZakup(red);
                ZakupAutomobila z = new ZakupAutomobila(zakup.getZakupID(), new Date(), null, null, null);
                ZakupAutomobila parametar = KlijentKontroler.getInstance().ucitajZakup(z);
                JOptionPane.showMessageDialog(this, "Sistem je učitao zakup!");                
                
                try {
                    RacunZakupaAutomobila racun = KlijentKontroler.getInstance().vratiRacunZakupa(parametar);
                    
                    if (racun != null) {
                        JOptionPane.showMessageDialog(this, "Sistem je već kreirao račun za ovaj zakup!");
                        return;
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da učita račun za ovaj zakup!");
                    return;
                }
                
                Object[] opcije = { "Da", "Ne" };
                int izbor = JOptionPane.showOptionDialog(null, "Da li želite da izdate račun?", "Izdavanje računa",JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, opcije, opcije[0]);
                
                if (izbor == 0) {
                    FormaRacun forma = new FormaRacun(this, true, parametar);
                    forma.setVisible(true);
                }
                
            }   catch(Exception e){              
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita zakup!");              
            }
        }    
    }//GEN-LAST:event_btnIzdajRacunActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzdajRacun;
    private javax.swing.JButton btnObrisiZakup;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnResetuj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaZakupa;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        
        try {
            tabelaZakupa.setModel(new ModelTabeleZakupa());
        } catch (Exception ex) {
            Logger.getLogger(FormaPretragaZakupa.class.getName()).log(Level.SEVERE, null, ex);
        }     
    }

    void osveziTabelu() {
       try {
            tabelaZakupa.setModel(new ModelTabeleZakupa());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da osveži tabelu!");
        }
    }
}
